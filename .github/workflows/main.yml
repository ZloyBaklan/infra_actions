name: Django-app workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: | 
        # обновление pip
        python -m pip install --upgrade pip 
        # установка flake8 и его плагинов
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        # установка зависимостей
        pip install -r requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        # запуск проверки проекта по flake8
        python -m flake8
        # перейти в папку, содержащую manage.py - <корневая_папка>/<папка_проекта>/manage.py
        cd infra_project/
                # запустить написанные разработчиком тесты
        python manage.py test

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 # Проверяет доступность репозитория DockerHub для workflow
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 # Вызывает сборщик контейнеров docker
      - name: Login to Docker 
        uses: docker/login-action@v1 # Запуск скрипта авторизации на DockerHub
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 # Выполняет push образа в DockerHub 
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/docker_s_test:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }} #cat ~/.ssh/id_rsa.pub :ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCVDlsWIoUD/gXQzNIeFP1aEsgU9gdqiqeg10MdrFdtneBZAmz0g0MoEqfCTfT3WYPwKnObC7buiiabpIB4CF4BLSoWaQrN8UoMrJrMcsaJsXki4FD19x8A8jsUOc6S4qlHRA0+R6Zah+g7M8CFXawPXk90/AUMKHNAJYDaXwVYcRAkMIFX2MpwGmjrCPgwPFd7XX2EitWXkhEyB3FFH7w+MjLpXa3C9Say2zuXxAqf/lPRzKXDbiQ7NOQPGFz3kpqEQuha3dox5hSuDXnqWo8tD2i5zY4gkCywwJzEFCBkUvw1SsMYuvwHB2ufYOSZ2B8Vvscx/uZ0rcgrbJkOzR7GH4p2aueNvxcBORIWXZjC7XUL6JWsw5PwzJ4gTF6sRcfK/KOqCheYjcokF2P0zZrb/4ATFZo28goIvvG7qrSSmh6627Dor4Mucy8zS9GMIhRYOg2XTfpapnTCVcwmu1r5gYdjgNOS7FDPRP/H3wtGiZZx43LFOh+MO+Wl7vvzKjU= zloybaklan@firsttest
        passphrase: ${{ secrets.PASSPHRASE }} # Если ваш ssh-ключ защищён фразой-паролем
        script: |
          # Выполняет pull образа с DockerHub
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker_s_test
          #остановка всех контейнеров
          sudo docker stop $(sudo docker ps -a -q)
          sudo docker run --rm -d -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/docker_s_test
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!